{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alanf\\\\Projetos\\\\formulario\\\\frontend\\\\src\\\\views\\\\Formulario\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\nimport api from \"../../Services/api\";\n\nfunction Formulario() {\n  const [perguntas, setPergunta] = useState([]);\n  const [resposta, setResposta] = useState([]);\n  const [formulario, setFormulario] = useState([]);\n  const [id, setId] = useState(1);\n  const idFormulario = localStorage.getItem(\"idFormulario\");\n  const nomePlanilha = perguntas.map(perguntas => perguntas.nome);\n  const formularioid = formulario.map(formulario => formulario.id);\n  const pergunta = perguntas.map(perguntas => perguntas.pergunta);\n  const history = useHistory();\n\n  function respostas(e, index) {\n    resposta[index] = e.target.value;\n    setResposta([...resposta]);\n  }\n\n  async function submt(e) {\n    e.preventDefault();\n    console.log(formularioid);\n\n    try {\n      for (var i = 0; i < perguntas.length; i++) {\n        const data = {\n          resposta: resposta[i]\n        };\n        await api.post(\"responderFormulario\", data, {\n          headers: {\n            id: id - 1,\n            Authorization: idFormulario,\n            nome: nomePlanilha,\n            pergunta: pergunta[i]\n          }\n        });\n      }\n\n      alert(\"Formulário preenchido com sucesso!\");\n      history.push(\"/\");\n    } catch (err) {\n      alert(\"erro\");\n    }\n  }\n\n  useEffect(() => {\n    api.get(\"list\", {\n      headers: {\n        Authorization: idFormulario\n      }\n    }).then(response => {\n      setPergunta(response.data);\n    });\n    api.get(\"listresposta\", {\n      headers: {\n        Authorization: idFormulario\n      }\n    }).then(response => {\n      setFormulario(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, nomePlanilha[0]), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, perguntas.map((pergunta, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, pergunta.pergunta, \": \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-formulario\",\n    type: \"text\",\n    onChange: e => respostas(e, index),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn-formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"RESPONDER\"))));\n}\n\nexport default Formulario;","map":{"version":3,"sources":["C:/Users/alanf/Projetos/formulario/frontend/src/views/Formulario/index.js"],"names":["React","useState","useEffect","useHistory","api","Formulario","perguntas","setPergunta","resposta","setResposta","formulario","setFormulario","id","setId","idFormulario","localStorage","getItem","nomePlanilha","map","nome","formularioid","pergunta","history","respostas","e","index","target","value","submt","preventDefault","console","log","i","length","data","post","headers","Authorization","alert","push","err","get","then","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport api from \"../../Services/api\";\r\n\r\nfunction Formulario() {\r\n  const [perguntas, setPergunta] = useState([]);\r\n  const [resposta, setResposta] = useState([]);\r\n  const [formulario, setFormulario] = useState([]);\r\n  const [id, setId] = useState(1);\r\n\r\n  const idFormulario = localStorage.getItem(\"idFormulario\");\r\n  const nomePlanilha = perguntas.map((perguntas) => perguntas.nome);\r\n  const formularioid = formulario.map((formulario) => formulario.id);\r\n  const pergunta = perguntas.map((perguntas) => perguntas.pergunta);\r\n\r\n  const history = useHistory();\r\n\r\n  function respostas(e, index) {\r\n    resposta[index] = e.target.value;\r\n    setResposta([...resposta]);\r\n  }\r\n\r\n  async function submt(e) {\r\n    e.preventDefault();\r\n    \r\n    \r\n     \r\n\r\n    console.log(formularioid)\r\n\r\n    try {\r\n      for (var i = 0; i < perguntas.length; i++) {\r\n        const data = {\r\n          resposta: resposta[i],\r\n        };\r\n        await api.post(\"responderFormulario\", data, {\r\n          headers: {\r\n            id: id - 1 ,\r\n            Authorization: idFormulario,\r\n            nome: nomePlanilha,\r\n            pergunta: pergunta[i]\r\n          },\r\n        });\r\n      }\r\n\r\n      alert(\"Formulário preenchido com sucesso!\");\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      alert(\"erro\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"list\", {\r\n        headers: {\r\n          Authorization: idFormulario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPergunta(response.data);\r\n      });\r\n\r\n      api\r\n      .get(\"listresposta\", {\r\n        headers: {\r\n          Authorization: idFormulario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setFormulario(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"div-formulario\">\r\n      <h1>{nomePlanilha[0]}</h1>\r\n      <div>\r\n        <form onSubmit={submt}>\r\n          <ul>\r\n            {perguntas.map((pergunta, index) => (\r\n              <li key={index}>\r\n                <br />\r\n                <label>{pergunta.pergunta}: </label>\r\n                <input\r\n                  className=\"input-formulario\"\r\n                  type=\"text\"\r\n                  onChange={(e) => respostas(e, index)}\r\n                  required\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button type=\"submit\" className=\"btn-formulario\">\r\n            RESPONDER\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formulario;\r\n"]},"metadata":{},"sourceType":"module"}