{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alanf\\\\Projetos\\\\formulario\\\\frontend\\\\src\\\\views\\\\Formulario\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\nimport api from \"../../Services/api\";\n\nfunction Formulario() {\n  const [perguntas, setPergunta] = useState([]);\n  const [resposta, setResposta] = useState([]);\n  const [formulario, setFormulario] = useState([]);\n  const idFormulario = localStorage.getItem(\"idFormulario\");\n  const nomePlanilha = perguntas.map(perguntas => perguntas.nome);\n  const formularioid = formulario.map(formulario => formulario.id + 1);\n  const pergunta = perguntas.map(perguntas => perguntas.pergunta);\n  const history = useHistory();\n\n  function respostas(e, index) {\n    resposta[index] = e.target.value;\n    setResposta([...resposta]);\n  }\n\n  async function submt(e) {\n    e.preventDefault();\n    var index = formularioid.length + 1;\n    var id = formularioid[index];\n    console.log(index);\n    console.log(id);\n  }\n\n  useEffect(() => {\n    api.get(\"list\", {\n      headers: {\n        Authorization: idFormulario\n      }\n    }).then(response => {\n      setPergunta(response.data);\n    });\n    api.get(\"listresposta\", {\n      headers: {\n        Authorization: idFormulario\n      }\n    }).then(response => {\n      setFormulario(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, nomePlanilha[0]), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, perguntas.map((pergunta, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, pergunta.pergunta, \": \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-formulario\",\n    type: \"text\",\n    onChange: e => respostas(e, index),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn-formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"RESPONDER\"))));\n}\n\nexport default Formulario;","map":{"version":3,"sources":["C:/Users/alanf/Projetos/formulario/frontend/src/views/Formulario/index.js"],"names":["React","useState","useEffect","useHistory","api","Formulario","perguntas","setPergunta","resposta","setResposta","formulario","setFormulario","idFormulario","localStorage","getItem","nomePlanilha","map","nome","formularioid","id","pergunta","history","respostas","e","index","target","value","submt","preventDefault","length","console","log","get","headers","Authorization","then","response","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,aAAP;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BN,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMW,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;AACA,QAAMC,YAAY,GAAGT,SAAS,CAACU,GAAV,CAAeV,SAAD,IAAeA,SAAS,CAACW,IAAvC,CAArB;AACA,QAAMC,YAAY,GAAGR,UAAU,CAACM,GAAX,CAAgBN,UAAD,IAAiBA,UAAU,CAACS,EAAX,GAAgB,CAAhD,CAArB;AACA,QAAMC,QAAQ,GAAGd,SAAS,CAACU,GAAV,CAAeV,SAAD,IAAeA,SAAS,CAACc,QAAvC,CAAjB;AAEA,QAAMC,OAAO,GAAGlB,UAAU,EAA1B;;AAEA,WAASmB,SAAT,CAAmBC,CAAnB,EAAsBC,KAAtB,EAA6B;AAC3BhB,IAAAA,QAAQ,CAACgB,KAAD,CAAR,GAAkBD,CAAC,CAACE,MAAF,CAASC,KAA3B;AACAjB,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX;AACD;;AAED,iBAAemB,KAAf,CAAqBJ,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEA,QAAIJ,KAAK,GAAGN,YAAY,CAACW,MAAb,GAAsB,CAAlC;AACA,QAAIV,EAAE,GAAGD,YAAY,CAACM,KAAD,CAArB;AAEDM,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYZ,EAAZ;AACA;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CACA4B,GADH,CACO,MADP,EACe;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEtB;AADR;AADE,KADf,EAMGuB,IANH,CAMSC,QAAD,IAAc;AAClB7B,MAAAA,WAAW,CAAC6B,QAAQ,CAACC,IAAV,CAAX;AACD,KARH;AAUEjC,IAAAA,GAAG,CACF4B,GADD,CACK,cADL,EACqB;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEtB;AADR;AADU,KADrB,EAMCuB,IAND,CAMOC,QAAD,IAAc;AAClBzB,MAAAA,aAAa,CAACyB,QAAQ,CAACC,IAAV,CAAb;AACD,KARD;AASH,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,YAAY,CAAC,CAAD,CAAjB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEY,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,SAAS,CAACU,GAAV,CAAc,CAACI,QAAD,EAAWI,KAAX,kBACb;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,QAAQ,CAACA,QAAjB,OAFF,eAGE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAOD,SAAS,CAACC,CAAD,EAAIC,KAAJ,CAH5B;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADD,CADH,CADF,eAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAfF,CADF,CAFF,CADF;AA0BD;;AAED,eAAenB,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport api from \"../../Services/api\";\r\n\r\nfunction Formulario() {\r\n  const [perguntas, setPergunta] = useState([]);\r\n  const [resposta, setResposta] = useState([]);\r\n  const [formulario, setFormulario] = useState([]);\r\n\r\n  const idFormulario = localStorage.getItem(\"idFormulario\");\r\n  const nomePlanilha = perguntas.map((perguntas) => perguntas.nome);\r\n  const formularioid = formulario.map((formulario,) => formulario.id + 1);\r\n  const pergunta = perguntas.map((perguntas) => perguntas.pergunta);\r\n\r\n  const history = useHistory();\r\n\r\n  function respostas(e, index) {\r\n    resposta[index] = e.target.value;\r\n    setResposta([...resposta]);\r\n  }\r\n\r\n  async function submt(e) {\r\n    e.preventDefault();\r\n\r\n    var index = formularioid.length + 1\r\n    var id = formularioid[index]\r\n\r\n   console.log(index)\r\n   console.log(id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"list\", {\r\n        headers: {\r\n          Authorization: idFormulario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPergunta(response.data);\r\n      });\r\n\r\n      api\r\n      .get(\"listresposta\", {\r\n        headers: {\r\n          Authorization: idFormulario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setFormulario(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"div-formulario\">\r\n      <h1>{nomePlanilha[0]}</h1>\r\n      <div>\r\n        <form onSubmit={submt}>\r\n          <ul>\r\n            {perguntas.map((pergunta, index) => (\r\n              <li key={index}>\r\n                <br />\r\n                <label>{pergunta.pergunta}: </label>\r\n                <input\r\n                  className=\"input-formulario\"\r\n                  type=\"text\"\r\n                  onChange={(e) => respostas(e, index)}\r\n                  required\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button type=\"submit\" className=\"btn-formulario\">\r\n            RESPONDER\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formulario;\r\n"]},"metadata":{},"sourceType":"module"}