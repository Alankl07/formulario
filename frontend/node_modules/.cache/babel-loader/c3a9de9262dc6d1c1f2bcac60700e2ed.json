{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alanf\\\\Projetos\\\\formulario\\\\frontend\\\\src\\\\views\\\\FormularioRespondido\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\nimport api from \"../../Services/api\";\n\nfunction Formulario() {\n  const [perguntas, setPergunta] = useState([]);\n  const [resposta, setResposta] = useState([]);\n  const idFormulario = localStorage.getItem(\"idFormulario\");\n  const nomePlanilha = perguntas.map(perguntas => perguntas.nome);\n  const perguntaid = perguntas.map(perguntas => perguntas.id);\n  const history = useHistory();\n\n  function respostas(e, index) {\n    resposta[index] = e.target.value;\n    setResposta([...resposta]);\n  }\n\n  async function submt(e) {\n    e.preventDefault();\n\n    try {\n      for (var i = 0; i < perguntas.length; i++) {\n        const data = {\n          resposta: resposta[i]\n        };\n        await api.put(\"resposta\", data, {\n          headers: {\n            id: perguntaid[i]\n          }\n        });\n      }\n\n      alert(\"Formulário preenchido com sucesso!\");\n      history.push(\"/\");\n    } catch (err) {\n      alert(\"erro\");\n    }\n  }\n\n  useEffect(() => {\n    api.get(\"listresposta\", {\n      headers: {\n        Authorization: idFormulario\n      }\n    }).then(response => {\n      setPergunta(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-formularioRes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"formulario-h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, nomePlanilha[0]), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"formulario-ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, perguntas.map((pergunta, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"formulario-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, pergunta.pergunta, \": \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"formulario-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, pergunta.resposta))))));\n}\n\nexport default Formulario;","map":{"version":3,"sources":["C:/Users/alanf/Projetos/formulario/frontend/src/views/FormularioRespondido/index.js"],"names":["React","useState","useEffect","useHistory","api","Formulario","perguntas","setPergunta","resposta","setResposta","idFormulario","localStorage","getItem","nomePlanilha","map","nome","perguntaid","id","history","respostas","e","index","target","value","submt","preventDefault","i","length","data","put","headers","alert","push","err","get","Authorization","then","response","pergunta"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport api from \"../../Services/api\";\r\n\r\nfunction Formulario() {\r\n  const [perguntas, setPergunta] = useState([]);\r\n  const [resposta, setResposta] = useState([]);\r\n\r\n  const idFormulario = localStorage.getItem(\"idFormulario\");\r\n  const nomePlanilha = perguntas.map((perguntas) => perguntas.nome);\r\n  const perguntaid = perguntas.map((perguntas) => perguntas.id);\r\n\r\n  const history = useHistory();\r\n\r\n  function respostas(e, index) {\r\n    resposta[index] = e.target.value;\r\n    setResposta([...resposta]);\r\n  }\r\n\r\n  async function submt(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      for (var i = 0; i < perguntas.length; i++) {\r\n        const data = {\r\n          resposta: resposta[i],\r\n        };\r\n        await api.put(\"resposta\", data, {\r\n          headers: {\r\n            id: perguntaid[i],\r\n          },\r\n        });\r\n      }\r\n\r\n      alert(\"Formulário preenchido com sucesso!\");\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      alert(\"erro\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"listresposta\", {\r\n        headers: {\r\n          Authorization: idFormulario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPergunta(response.data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"div-formularioRes\">\r\n      <h1 className=\"formulario-h1\">{nomePlanilha[0]}</h1>\r\n      <div>\r\n        <ul className=\"formulario-ul\">\r\n          {perguntas.map((pergunta, index) => (\r\n            <li key={index}>\r\n              <br />\r\n              <label className=\"formulario-label\">{pergunta.pergunta}: </label>\r\n              <p className=\"formulario-p\">{pergunta.resposta}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formulario;\r\n"]},"metadata":{},"sourceType":"module"}